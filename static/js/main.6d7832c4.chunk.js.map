{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","onlyUrl","this","isImdbUrlValid","match","isImgUrlValid","onSubmit","event","preventDefault","setState","props","addMovie","value","id","placeholder","onChange","target","required","disabled","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d7832c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n  };\n\n  // я не зміг з'ясувати як перенести regex\n  // eslint-disable-next-line max-len\n  onlyUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  render() {\n    const { title, imgUrl, imdbUrl, imdbId, description } = this.state;\n\n    const isImdbUrlValid = imdbUrl.match(this.onlyUrl) || imdbUrl === '';\n    const isImgUrlValid = imgUrl.match(this.onlyUrl) || imgUrl === '';\n\n    return (\n      <>\n        <h1 className=\"addFilmTitle\">\n          Add film form\n        </h1>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n\n            if (!imgUrl.match(this.onlyUrl) || !imdbUrl.match(this.onlyUrl)) {\n              return;\n            }\n\n            this.setState(() => ({\n              title: '',\n              imgUrl: '',\n              imdbUrl: '',\n              imdbId: '',\n              description: '',\n            }));\n\n            this.props.addMovie(\n              {\n                title,\n                description,\n                imgUrl,\n                imdbUrl,\n                imdbId,\n              },\n            );\n          }}\n        >\n          <ul>\n            <li>\n              <label>\n                Title*:\n                <input\n                  value={title}\n                  className=\"addInfoBar\"\n                  id=\"Title\"\n                  placeholder=\"Title*\"\n                  onChange={event => this.setState({\n                    title: event.target.value,\n                  })}\n                  required\n                />\n              </label>\n            </li>\n            <li>\n              <label>\n                Image url*:\n                <input\n                  value={imgUrl}\n                  className={`addInfoBar ${!isImgUrlValid ? 'invalid' : ''\n                  }`}\n                  placeholder=\"Image url*\"\n                  onChange={event => this.setState({\n                    imgUrl: event.target.value,\n                  })}\n                  required\n                />\n              </label>\n              <text className=\"err\">\n                {!isImgUrlValid ? 'this is invalid url' : ''}\n              </text>\n            </li>\n            <li>\n              <label>\n                imdbUrl*:\n                <input\n                  value={imdbUrl}\n                  className={`addInfoBar ${!isImdbUrlValid ? 'invalid' : ''}`}\n                  placeholder=\"imdbUrl*\"\n                  onChange={event => this.setState({\n                    imdbUrl: event.target.value,\n                  })}\n                  required\n                />\n                <text className=\"err\">\n                  {!isImdbUrlValid ? 'this is invalid url' : ''}\n                </text>\n              </label>\n            </li>\n            <li>\n              <label>\n                imdbId*:\n                <input\n                  value={imdbId}\n                  className=\"addInfoBar\"\n                  placeholder=\"imdbId*\"\n                  onChange={event => this.setState({\n                    imdbId: event.target.value,\n                  })}\n                  required\n                />\n              </label>\n            </li>\n            <li>\n              <label>\n                Description:\n                <textarea\n                  value={description}\n                  className=\"addInfoBar description\"\n                  placeholder=\"Description\"\n                  onChange={event => this.setState({\n                    description: event.target.value,\n                  })}\n                />\n              </label>\n            </li>\n          </ul>\n          <button\n            disabled={\n              !imdbUrl.match(this.onlyUrl)\n              || !imgUrl.match(this.onlyUrl)\n              || title === ''\n              || imdbId === ''\n            }\n            type=\"submit\"\n            className=\"submitButton\"\n          >\n            Submit\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        movie,\n        ...state.movies,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}