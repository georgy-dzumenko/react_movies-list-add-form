{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","onSubmit","event","preventDefault","props","addMovie","id","placeholder","onChange","setState","target","value","required","type","Component","App","moviesFromServer","this","ReactDOM","render","document","getElementById"],"mappings":"4xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,UCtBGK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPE,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRb,YAAa,IANjB,4CASE,WAAU,IAAD,OACP,OACE,0BACEgB,SAAU,SAACC,GACTA,EAAMC,iBACN,EAAKC,MAAMC,SACT,CACErB,MAAO,EAAKgB,MAAMhB,MAClBC,YAAa,EAAKe,MAAMf,YACxBC,OAAQ,EAAKc,MAAMd,OACnBC,QAAS,EAAKa,MAAMb,QACpBW,OAAQ,EAAKE,MAAMF,WAKzB,wCAEE,2BACEV,UAAU,aACVkB,GAAG,QACHC,YAAY,QACZC,SAAU,SAAAN,GAAK,OAAI,EAAKO,SAAS,CAAEzB,MAAOkB,EAAMQ,OAAOC,SACvDC,UAAQ,KAGZ,4CAEE,2BACExB,UAAU,aACVmB,YAAY,YACZC,SAAU,SAAAN,GAAK,OAAI,EAAKO,SAAS,CAAEvB,OAAQgB,EAAMQ,OAAOC,SACxDC,UAAQ,KAGZ,0CAEE,2BACExB,UAAU,aACVmB,YAAY,UACZC,SAAU,SAAAN,GAAK,OAAI,EAAKO,SAAS,CAAEtB,QAASe,EAAMQ,OAAOC,SACzDC,UAAQ,KAGZ,yCAEE,2BACExB,UAAU,aACVmB,YAAY,SACZC,SAAU,SAAAN,GAAK,OAAI,EAAKO,SAAS,CAAEX,OAAQI,EAAMQ,OAAOC,SACxDC,UAAQ,KAGZ,+CAEE,8BACExB,UAAU,yBACVmB,YAAY,eACZC,SAAU,SAAAN,GAAK,OAAI,EAAKO,SAAS,CAC/BxB,YAAaiB,EAAMQ,OAAOC,YAIhC,4BACEE,KAAK,SACLzB,UAAU,gBAFZ,eAxER,GAA8B0B,a,OCEjBC,EAAb,4MACEf,MAAQ,CACNN,OAAQsB,GAFZ,EAKEX,SAAW,SAACT,GACV,EAAKa,UAAS,SAAAT,GAAK,MAAK,CACtBN,OAAO,CACLE,GADI,mBAEDI,EAAMN,cATjB,4CAcE,WACE,IAAQA,EAAWuB,KAAKjB,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUiB,SAAUY,KAAKZ,iBAvBnC,GAAyBS,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.abd88e27.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.props.addMovie(\n            {\n              title: this.state.title,\n              description: this.state.description,\n              imgUrl: this.state.imgUrl,\n              imdbUrl: this.state.imdbUrl,\n              imdbId: this.state.imdbId,\n            },\n          );\n        }}\n      >\n        <label>\n          Title:\n          <input\n            className=\"addInfoBar\"\n            id=\"Title\"\n            placeholder=\"Title\"\n            onChange={event => this.setState({ title: event.target.value })}\n            required\n          />\n        </label>\n        <label>\n          Image url:\n          <input\n            className=\"addInfoBar\"\n            placeholder=\"Image url\"\n            onChange={event => this.setState({ imgUrl: event.target.value })}\n            required\n          />\n        </label>\n        <label>\n          imdbUrl:\n          <input\n            className=\"addInfoBar\"\n            placeholder=\"imdbUrl\"\n            onChange={event => this.setState({ imdbUrl: event.target.value })}\n            required\n          />\n        </label>\n        <label>\n          imdbId:\n          <input\n            className=\"addInfoBar\"\n            placeholder=\"imdbId\"\n            onChange={event => this.setState({ imdbId: event.target.value })}\n            required\n          />\n        </label>\n        <label>\n          Description*:\n          <textarea\n            className=\"addInfoBar description\"\n            placeholder=\"Description*\"\n            onChange={event => this.setState({\n              description: event.target.value,\n            })}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          className=\"submitButton\"\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        movie,\n        ...state.movies,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}